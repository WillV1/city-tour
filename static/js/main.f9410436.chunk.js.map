{"version":3,"sources":["logo.svg","components/home/Home.js","components/about/About.js","components/tourlist/TourList.js","components/tourlist/tourData.js","components/tours/Tours.js","components/navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","About","TourList","state","showInfo","handleInfo","setState","this","props","tour","id","city","img","name","info","removeTour","className","src","alt","onClick","icon","faWindowClose","faCaretSquareDown","React","Component","tourData","Tours","tours","sortedTours","filter","map","key","Navigation","Container","fluid","Navbar","bg","variant","Brand","href","logo","Nav","Link","path","exact","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9410436.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.12a6659f.svg\";","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>Home</div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>About</div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './TourList.scss';\r\n\r\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCaretSquareDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass TourList extends React.Component {\r\n    state = {\r\n        showInfo: false,\r\n    }\r\n\r\n    handleInfo = () => {\r\n        this.setState({\r\n            showInfo: !this.state.showInfo\r\n        });\r\n    }\r\n    render() {\r\n\r\n        const { id, city, img, name, info } = this.props.tour;\r\n        const { removeTour } = this.props;\r\n\r\n        return (\r\n            <article className=\"tour\">\r\n                <div className=\"img-container\">\r\n                    <img src={img} alt=\"city tour\" />\r\n                    <span className=\"close-btn\" onClick={() => removeTour(id)}>\r\n                        <FontAwesomeIcon icon={faWindowClose} />\r\n                    </span>\r\n                </div>\r\n                <div className=\"tour-info\">\r\n                    <h3>{city}</h3>\r\n                    <h4>{name}</h4>\r\n                    <h5>info{\" \"}\r\n                    <span onClick={this.handleInfo}>\r\n                    <FontAwesomeIcon icon={faCaretSquareDown} /></span></h5>\r\n                    {this.state.showInfo && <p>{info}</p>}\r\n                </div>\r\n            </article>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default TourList;","export const tourData = [\n  {\n    id: 1,\n    city: \"new york\",\n    img: \"./img/newyork.jpeg\",\n    name: \"new york bridge tour\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  },\n  {\n    id: 2,\n    city: \"paris\",\n    img: \"./img/paris.jpeg\",\n    name: \"paris lights tour\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  },\n  {\n    id: 3,\n    city: \"london\",\n    img: \"./img/london.jpeg\",\n    name: \"london royal palace tour\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  },\n  {\n    id: 4,\n    city: \"tokyo\",\n    img: \"./img/tokyo.jpeg\",\n    name: \"tokyo sushi tour\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  }\n];\n","import React from 'react';\r\nimport './Tours.scss';\r\nimport TourList from '../tourlist/TourList';\r\nimport {tourData} from '../tourlist/tourData';\r\n\r\nclass Tours extends React.Component {\r\n    state = {\r\n        tours: tourData\r\n    };\r\n\r\n    removeTour = id => {\r\n        const{tours} = this.state;\r\n        const sortedTours = tours.filter(tour => tour.id !== id)\r\n        this.setState({\r\n            tours: sortedTours\r\n        });\r\n    }\r\n    \r\n    render() {\r\n\r\n        const {tours } = this.state;\r\n\r\n    return (\r\n        <div>\r\n            <section className='tourlist'>\r\n                {\r\n                 tours.map(tour => (\r\n                 <TourList key={tour.id} tour={tour} removeTour={this.removeTour}></TourList>) )   \r\n                }\r\n            </section>\r\n            </div>\r\n    )\r\n    }    \r\n}\r\n\r\nexport default Tours;","import React from 'react';\r\nimport logo from '../../logo.svg';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport Home from '../home/Home';\r\nimport About from '../about/About';\r\nimport Tours from '../tours/Tours';\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <Router>\r\n            <Container fluid={true}>\r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"navbar\">\r\n                    <Navbar.Brand href=\"#home\"><img src={logo} alt=\"city tours company\"/></Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link className=\"nav-link\" href=\"/\">Home</Nav.Link>\r\n                        <Nav.Link className=\"nav-link\" href=\"/about\">About</Nav.Link>\r\n                        <Nav.Link className=\"nav-link\" href=\"/tours\">Tours</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <Switch>\r\n                    <Route path=\"/\" exact render={() => <Home />} />\r\n                    <Route path=\"/about\" exact render={() => <About />} />\r\n                    <Route path=\"/tours\" exact render={() => <Tours />} />\r\n                </Switch>\r\n            </Container>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport './App.scss';\nimport Navigation from './components/navbar/Navbar';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div>\n      <Navigation />\n      </div>\n  )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}